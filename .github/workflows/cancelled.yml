name: "Cancelled"

on:
  workflow_dispatch: # Allow manual triggering of this job in case of failures
    inputs:
      version:
        description:
          'The version override. Example: "8.1.2". Leave blank if you want conventional commits to
          decide which version'
        required: false

jobs:
  release:
    # Only run if:
    # - The commit message does not contain `[skip release]`
    # - OR the workflow was manually triggered and has a `version` string
    if: "!contains(github.event.head_commit.message, '[skip release]') || inputs.version"
    runs-on: ubuntu-latest

    steps:
      ## First, we'll checkout the repository. We don't persist credentials because we need a
      ## Personal Access Token to push on a branch that is protected. See
      ## https://github.com/cycjimmy/semantic-release-action#basic-usage
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0 # Used for conventional commit ranges

      ## This step installs node and sets up several matchers (regex matching for Github
      ## Annotations). See
      ## https://github.com/actions/setup-node/blob/25316bbc1f10ac9d8798711f44914b1cf3c4e954/src/main.ts#L58-L65
      - uses: actions/setup-node@v2.4.0
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org

      ## The caching steps create a cache key based on the OS and hash of the yarn.lock file. A
      ## cache hit will copy files from Github cache into the `node_modules` and `.cache/cypress`
      ## folders. A cache hit will skip the cache steps
      - name: Cache node modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-hash-${{ hashFiles('yarn.lock') }}

      - name: Cache Cypress
        id: cypress-cache
        uses: actions/cache/@v2
        with:
          path: .cache/cypress
          key: ${{ runner.os }}-cypress-cache-version-${{ steps.cypress-version.outputs.version }}

      - name: Install packages
        run: yarn install

      - name: Check version
        if: "inputs.version"
        run: echo "Released ${{inputs.version}} version"

      - name: Create react app
        run: npx create-react-app my-app
